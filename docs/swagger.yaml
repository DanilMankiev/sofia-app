basePath: /
definitions:
  entity.Blog:
    properties:
      description_full:
        type: string
      description_preview:
        type: string
      id:
        type: integer
      image_all:
        items:
          type: string
        type: array
      image_preview:
        type: string
      topic:
        type: string
    required:
    - description_full
    - description_preview
    - image_all
    - image_preview
    - topic
    type: object
  entity.Category:
    properties:
      description:
        type: string
      id:
        type: integer
      name:
        type: string
    required:
    - description
    - name
    type: object
  entity.CreateBlog:
    properties:
      description_full:
        type: string
      description_preview:
        type: string
      image_all:
        items:
          type: string
        type: array
      image_preview:
        type: string
      topic:
        type: string
    required:
    - description_full
    - description_preview
    - topic
    type: object
  entity.CreateProduct:
    properties:
      composition:
        type: string
      delivery:
        type: string
      description_full:
        type: string
      description_preview:
        type: string
      furniture:
        type: string
      image_all:
        items:
          type: string
        type: array
      image_preview:
        type: string
      name:
        type: string
      price:
        type: integer
      purchase:
        type: string
    required:
    - composition
    - delivery
    - description_full
    - description_preview
    - furniture
    - name
    - price
    - purchase
    type: object
  entity.Product:
    properties:
      category_id:
        type: integer
      category_name:
        type: string
      composition:
        type: string
      delivery:
        type: string
      description_full:
        type: string
      description_preview:
        type: string
      furniture:
        type: string
      id:
        type: integer
      image_all:
        items:
          type: string
        type: array
      image_preview:
        type: string
      name:
        type: string
      price:
        type: integer
      purchase:
        type: string
    required:
    - composition
    - delivery
    - description_full
    - description_preview
    - furniture
    - name
    - price
    - purchase
    type: object
  entity.RefreshToken:
    properties:
      token:
        type: string
    required:
    - token
    type: object
  entity.Review:
    properties:
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      surname:
        type: string
      topic:
        type: string
    required:
    - description
    - name
    - surname
    - topic
    type: object
  entity.SignInInput:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  entity.SignUpInput:
    properties:
      email:
        default: example@gmail.com
        type: string
      name:
        default: example
        type: string
      password:
        default: example
        type: string
      phone:
        default: "+79376343481"
        type: string
      surname:
        default: example
        type: string
    required:
    - email
    - name
    - password
    - phone
    - surname
    type: object
  entity.UpdateCategoryInput:
    properties:
      description:
        type: string
      name:
        type: string
    type: object
  entity.UpdateProductInput:
    properties:
      category_id:
        type: string
      category_name:
        type: string
      composition:
        type: string
      delivery:
        type: string
      description_full:
        type: string
      description_preview:
        type: string
      furniture:
        type: string
      name:
        type: string
      price:
        type: integer
      purchase:
        type: string
    type: object
  entity.UserDisplay:
    properties:
      email:
        default: example@gmail.com
        type: string
      id:
        type: string
      name:
        default: example
        type: string
      phone:
        default: "+79376343481"
        type: string
      surname:
        default: example
        type: string
    required:
    - email
    - name
    - phone
    - surname
    type: object
  handler.errorResponse:
    properties:
      message:
        type: string
    type: object
  handler.idResponse:
    properties:
      id:
        type: integer
    type: object
  handler.imageURLResponse:
    properties:
      imageurl:
        items:
          type: string
        type: array
    type: object
  handler.statusResponse:
    properties:
      status:
        type: string
    type: object
  handler.tokenResponse:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
host: localhost:8000
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: API Server for sofia application
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: API sofia
  version: "1.0"
paths:
  /api/blog:
    get:
      consumes:
      - application/json
      description: Get all blog API
      operationId: get all blog api
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.Blog'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get All blog
      tags:
      - blog
    post:
      consumes:
      - application/json
      description: Create blog API
      operationId: create blog api
      parameters:
      - description: Blog input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/entity.CreateBlog'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.idResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create blog
      tags:
      - blog
  /api/blog/{id}:
    delete:
      consumes:
      - application/json
      description: Delete blog API
      operationId: delete blog api
      parameters:
      - description: Blog ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.statusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete blog
      tags:
      - blog
    get:
      consumes:
      - application/json
      description: Get blog by ID API
      operationId: Get blog by ID api
      parameters:
      - description: Blog ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.Blog'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get blog by ID
      tags:
      - blog
  /api/blog/{id}/images:
    delete:
      consumes:
      - application/json
      description: Blog image API
      operationId: deleteblog api
      parameters:
      - description: Blog ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.statusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete Blog Image
      tags:
      - blog
    post:
      consumes:
      - multipart/form-data
      description: Blog image API
      operationId: createblog api
      parameters:
      - description: Blog ID
        in: path
        name: id
        required: true
        type: integer
      - description: Blog Images
        in: formData
        name: image
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.imageURLResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create Blog Image
      tags:
      - blog
  /api/category:
    get:
      consumes:
      - application/json
      description: Get All category API
      operationId: get all category api
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.Category'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get All category
      tags:
      - category
    post:
      consumes:
      - application/json
      description: Create category API
      operationId: create category api
      parameters:
      - description: Create category input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/entity.Category'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.Category'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create category
      tags:
      - category
  /api/category/{id}:
    delete:
      consumes:
      - application/json
      description: Delete category API
      operationId: delete category api
      parameters:
      - description: Category id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.statusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete category
      tags:
      - category
    get:
      consumes:
      - application/json
      description: Get category by id API
      operationId: get category by id api
      parameters:
      - description: Category id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.Category'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get category by id
      tags:
      - category
    put:
      consumes:
      - application/json
      description: Update category API
      operationId: update category api
      parameters:
      - description: Category id
        in: path
        name: id
        required: true
        type: integer
      - description: Update category input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/entity.UpdateCategoryInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.statusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update category
      tags:
      - category
  /api/category/{id}/products:
    get:
      consumes:
      - application/json
      description: Get all product API
      operationId: get all products api
      parameters:
      - description: Category id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.Product'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get all product
      tags:
      - product
    post:
      consumes:
      - application/json
      description: Create product API
      operationId: create products api
      parameters:
      - description: Category id
        in: path
        name: id
        required: true
        type: integer
      - description: Create product input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/entity.CreateProduct'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.idResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create product
      tags:
      - product
  /api/products/{id}:
    delete:
      consumes:
      - application/json
      description: Delete product API
      operationId: delete product api
      parameters:
      - description: Product id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.statusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete product
      tags:
      - product
    get:
      consumes:
      - application/json
      description: Get product by id API
      operationId: get product by id api
      parameters:
      - description: Product id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.Product'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get product by id
      tags:
      - product
    put:
      consumes:
      - application/json
      description: Update product API
      operationId: update product api
      parameters:
      - description: Product id
        in: path
        name: id
        required: true
        type: integer
      - description: Product input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/entity.UpdateProductInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.statusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update product
      tags:
      - product
  /api/products/{id}/images:
    delete:
      consumes:
      - application/json
      description: Delete product image API
      operationId: delete product image api
      parameters:
      - description: Product id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.statusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete product image
      tags:
      - product
    post:
      consumes:
      - multipart/form-data
      description: Create product image API
      operationId: create product image api
      parameters:
      - description: Product images
        in: formData
        name: image
        required: true
        type: file
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.imageURLResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create product image
      tags:
      - product
  /api/review:
    get:
      consumes:
      - application/json
      description: Get all review API
      operationId: get all review api
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.Review'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get all review
      tags:
      - review
    post:
      consumes:
      - application/json
      description: Create review API
      operationId: create review api
      parameters:
      - description: Review input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/entity.Review'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.statusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create review
      tags:
      - review
  /api/review/{id}:
    delete:
      consumes:
      - application/json
      description: Delete review API
      operationId: delete review api
      parameters:
      - description: Review id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.statusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete review
      tags:
      - review
    put:
      consumes:
      - application/json
      description: Update review API
      operationId: update review api
      parameters:
      - description: Review id
        in: path
        name: id
        required: true
        type: integer
      - description: Review input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/entity.Review'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.statusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update review
      tags:
      - review
  /api/user/:
    get:
      consumes:
      - application/json
      description: Get user by id API
      operationId: Get user by id api
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.UserDisplay'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get user by id
      tags:
      - user
  /api/user/favorites/:
    get:
      consumes:
      - application/json
      description: Get all favorites API
      operationId: Get all favorites api
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.Product'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get all favorites
      tags:
      - favotites
  /api/user/favorites/{id}:
    delete:
      consumes:
      - application/json
      description: Delete favorites API
      operationId: Delete favorites api
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.statusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete favorites
      tags:
      - favotites
    post:
      consumes:
      - application/json
      description: Add product to favorites API
      operationId: Add product to favorites api
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.statusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Add product to favorites
      tags:
      - favotites
  /auth/refresh:
    post:
      consumes:
      - application/json
      description: Refresh token API
      operationId: refresh tokenapi
      parameters:
      - description: Refresh token
        in: body
        name: token
        required: true
        schema:
          $ref: '#/definitions/entity.RefreshToken'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.tokenResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Refresh token
      tags:
      - auth
  /auth/sign-in:
    post:
      consumes:
      - application/json
      description: SignIn API
      operationId: signin api
      parameters:
      - description: Sign-in input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/entity.SignInInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.tokenResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: SignIn
      tags:
      - auth
  /auth/sign-up:
    post:
      consumes:
      - application/json
      description: SignUp API
      operationId: signup api
      parameters:
      - description: Account input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/entity.SignUpInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.statusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: SignUp
      tags:
      - auth
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
